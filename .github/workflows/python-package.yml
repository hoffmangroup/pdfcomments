# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-unix:

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: [3.6, 3.7, 3.8]

    runs-on: "${{ matrix.os }}"

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-docstrings flake8-mypy mypy pytest pytest-cov
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --statistics
    - name: pytest
      run: |
        python setup.py develop
        pytest --cov=pdfcomments tests

  build-windows:
    # remove flake8-mypy to avoid its bug:
    # `re.error: incomplete escape \U at position 72 (line 4, column 3)`

    strategy:
      matrix:
        os: ["windows-latest"]
        python-version: [3.6, 3.7, 3.8]

    runs-on: "${{ matrix.os }}"

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-docstrings pytest pytest-cov
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --statistics
    - name: pytest
      run: |
        python setup.py develop
        pytest --cov=pdfcomments tests
